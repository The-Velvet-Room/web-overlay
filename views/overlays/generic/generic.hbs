<!DOCTYPE html>
<html>
  <head>
    <title>{{title}}</title>
    <link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>
    <link rel='stylesheet' href='/stylesheets/overlays/generic/generic.css' />
    <link rel='stylesheet' href='/stylesheets/overlays/characters.css' />
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/remote/obs-remote.min.js"></script>
  </head>
  <body>
    <div id="background" class="container"></div>
    <div id="main-container" class="container">
      <div class="title playerText"></div>
      <div class="tourneyInfo playerText"></div>
      <div class="lPort"></div>
      <div class="rPort"></div>
      <div class="lScore playerText"></div>
      <div class="lPlayer playerText"></div>

      <div class="lIcons">
        <img class="lCharacter" src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif">
        <p class="lState"></p>
      </div>
      <div class="rIcons">
        <img class="rCharacter" src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif">
        <p class="rState"></p>
      </div>

      <div class="rPlayer playerText"></div>
      <div class="rScore playerText"></div>
    </div>
    <script>
    OBSRemote.prototype._authHash = OBSRemote.prototype._webCryptoHash;
    var obs = new OBSRemote();
    obs.connect();

    $(function () {
      var socket = io('/overlay');

      socket.on('change layout', function(data) {
        var background = $('#background');
        var container = $('#main-container');

        if (!background.hasClass(data.layout)) {
          background.attr('class', 'container');
          container.attr('class', 'container');

          background.addClass(data.layout);
          container.addClass(data.layout);
          obs.setCurrentScene(data.layout);
        }

        if (data.background !== '' && background.css('background-image') !== 'url(' + data.background + ')')
          background.css('background-image', 'url(' + data.background + ')');
      });

      socket.on('update overlay', function(data) {
        if(data.title != document.getElementsByClassName('title')[0].innerText) {
          $('.title').trigger('textChanged', data.title || '');
        }

        if(data.tourneyInfo != document.getElementsByClassName('tourneyInfo')[0].innerText) {
          $('.tourneyInfo').trigger('textChanged', data.tourneyInfo || '');
        }

        if(data.lplayer != document.getElementsByClassName('lPlayer')[0].innerText) {
          $('.lPlayer').trigger('newName', data.lplayer || '');
        }

        if(data.rplayer != document.getElementsByClassName('rPlayer')[0].innerText) {
          $('.rPlayer').trigger('newName', data.rplayer || '');
        }

        if(data.lscore != document.getElementsByClassName('lScore')[0].innerText) {
          $('.lScore').trigger('textChanged', data.lscore || '');
        }

        if(data.rscore != document.getElementsByClassName('rScore')[0].innerText) {
          $('.rScore').trigger('textChanged', data.rscore || '');
        }

        $('.lCharacter').attr('class', 'lCharacter');
        if(data.lCharacter) 
          $('.lCharacter').addClass(data.lCharacter);

        $('.rCharacter').attr('class', 'rCharacter');
        if(data.rCharacter)
          $('.rCharacter').addClass(data.rCharacter);

        $('.lPort').css('background-color', data.portLeft || 'transparent');
        $('.rPort').css('background-color', data.portRight || 'transparent');
        $('.lState').text(data.stateLeft || '');
        $('.rState').text(data.stateRight || '');
      });

      function scaleFont(jQueryElement, newLength) {
        var element = jQueryElement.get()[0];
        var length = newLength;
        console.log(length);

        if (length <= 7) {
          element.style.fontSize = '42px';
          element.style.top = '1030px';
        }
        else if (length <= 20){
          element.style.fontSize = '28px';
          element.style.top = '1039px';
        }
        else if(length <= 28) {
          element.style.fontSize = '20px';
          element.style.top = '1044px';
        }
        else {
          element.style.fontSize = '14px';
          element.style.top = '1048px';
        }
      }

      function createNameChangeEventListener(jQuerySelector) {
        var element = $(jQuerySelector);
        element.bind('newName', function(e, newText){
            $(this).animate({'opacity': '0', 'margin-left': '-1%'}, 350, function() {
                $(this).text(newText);
              }).animate({'opacity': '1', 'margin-left': '0'}, 350);

             scaleFont(element, newText.length);
          });
      }

      createNameChangeEventListener('.lPlayer');
      createNameChangeEventListener('.rPlayer');

      $('.playerText').bind('textChanged', function(e, newText){
        $(this).animate({'opacity': '0', 'margin-left': '-1%'}, 350, function() {
            $(this).text(newText);
          }).animate({'opacity': '1', 'margin-left': '0'}, 350);
      });

    });
    </script>
  </body>
</html>
