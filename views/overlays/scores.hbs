<head>
	<link rel='stylesheet' href='/stylesheets/overlays/characters.css' />
</head>

<h1 id="title"></h1>

<table border="2" style="text-align: center;">
	<tr>
		<td>
			<h1 id="lplayer"></h1>
		</td>
		<th>vs.</th>
		<td>
			<h1 id="rplayer"></h1>
		</td>
	</tr>

	<tr>
		<td><img id="leftCharacter" style="zoom: 200%" src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif"> </td>
		<th>-</th>
		<td><img id="rightCharacter" style="zoom: 200%" src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif"></td>
	</tr>

	<tr>
		<td>
			<h1><span id="lscore"></span></h1>
		</td>
		<th>
			-
		</th>
		<td>
			<h1><span id="rscore"></span></h1>
		</td>
	</tr>

	<tr>
		<td>
			<h1><span id="leftState"></span></h1>
		</td>
		<th>
			-
		</th>
		<td>
			<h1><span id="rightState"></span></h1>
		</td>
	</tr>
</table>

<p class="requires-twitch">
	<label for="twitchViewers">
		Current Viewers:
		<input id="twitchViewers" class="twitch-pollable"></input>
	</label>
	<label for="twitchPeakViewers">
		Peak Viewers:
		<input id="twitchPeakViewers" class="twitch-pollable"></input>
	</label>
	</p>

<div style="margin-top: 20px"><span>Commentated by: </span><span id="commentators"></span></div>

<script src="/socket.io/socket.io.js"></script>
<script>
	var currentTwitchUsername = null;
	var socket = io('/overlay');

	socket.on('update overlay', function(data) {
		var leftCharIcon = document.getElementById('leftCharacter');
        var rightCharIcon = document.getElementById('rightCharacter');
        
		document.getElementById('lplayer').innerText = data.lplayer || '';
		document.getElementById('rplayer').innerText = data.rplayer || '';
		document.getElementById('title').innerText = data.title || '';
		document.getElementById('lscore').innerText = data.lscore || 0;
		document.getElementById('rscore').innerText = data.rscore || 0;
		document.getElementById('commentators').innerText = data.commentators || '';

		if(data.lCharacter) {
          document.getElementById('leftCharacter').className = data.lCharacter;
        }
        else {
          document.getElementById('leftCharacter').className = null;
        }

        if(data.rCharacter) {
          document.getElementById('rightCharacter').className = data.rCharacter;
        }
        else {
          document.getElementById('rightCharacter').className = null;
        }
	});

	var twitchSocket = io('/twitch');

	twitchSocket.on('send twitch data', function(data) {
		document.getElementById('twitchViewers').value = data.twitchViewers || 'offline';
		document.getElementById('twitchPeakViewers').value = data.twitchPeakViewers || 'offline';
	});

	twitchSocket.on('update twitch viewers', function(data){
		document.getElementById('twitchViewers').value = data.viewers || 0;
		document.getElementById('twitchPeakViewers').value = data.peakViewers || 0;
	});
</script>